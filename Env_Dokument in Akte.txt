'************************************************************************
'*
'*	ASFINAG DMS_NEU
'*	Script				:	Filing Environment/ Dokument in Arbeit
'*	erstellt am / von	:	23.06.2010/ Markus D. Hartbauer, SER
'*	Überarbeitung Ü001	:	27.08.2010/	Guido Bachmayr, SER
'*	Überarbeitung Ü002	:	07.12.2010/ Markus D. Hartbauer, SER
'*	Überarbeitung Ü003	:	07.01.2011/ Günther F. Schinko, SER
'*	Überarbeitung Ü004	:	10.02.2011/ Guido J. Bachmayr, SER
'*	Überarbeitung Ü005	:	16.02.2011/ Christian Aigner, SER
'*	Überarbeitung Ü006	:	10.03.2011/ Markus D. Hartbauer, SER: Einbau von Aufrufen für Performance-Messungen
'*  Überarbeitung Ü007	:	13.04.2011/ Guido J. Bachmayr, SER: CR 14: Anlassdatum nicht mehr mit Filedatum überschreiben
'*	Überarbeitung Ü008	:	26.04.2011/ Markus D. Hartbauer, SER: CR 37: Erweiterung ASF_aktuelles_Register
'*	Überarbeitung Ü009	:	24.08.2011/ Christian Aigner, SER: automatische Übernahme einiger Deskriptoren von der Akte auf das Dokument
'*	Überarbeitung Ü010	:	21.10.2011/	Günther F. Schinko, SER:	CR 54: Dateiname Attachment anstatt kryptischen Namen
'*	Überarbeitung Ü011	:	28.11.2012/	Günther F. Schinko, SER:	Erweiterung Ü010
'*	Überarbeitung Ü012	:	18.06.2014/	Christian Aigner: CR 1 Tranche 6
'*	Überarbeitung Ü013	:	29.04.2014/	Guido Bachmayr: Massenablage: Auf geändertes Register in Aktenanzeige reagieren.
'*	Überarbeitung Ü014	:	04.10.2015/	Guido Bachmayr: Massenablage: WF für jedes Dokument starten.
'*	Überarbeitung Ü015	:	03.11.2016/	Klaus Grundwald, SER: Umstellung Deskriptoren (Ids anstelle von Langtexten)
'*  DMS-423             :   09.02.2017/ Stephan Wagner, SER: Fehler bei "myFolderTreeView_OnSelChange",
'*										wenn Parent Register nicht eindeutig war
'
'************************************************************************

	Option Explicit

'************************************************************************
'*	Globale Objekte
'************************************************************************

'*	aktuelle Objekte für diese Instanz
	Dim				MyASF_aktuelle_Akte		As SWAFRAMELib.ItaFolder
'Ü008
	Dim				MyASF_aktuelles_Register	As FolderManager.CNode
'/Ü008
'*	GBA 2010-08-27
	'Importieren mehrerer Files --> Frage: 1 oder je File 1 Dokument
	'Aufruf der: 2. OnFileOpen
	'Wenn je File 1 Dok, dann alle weiteren Files im Hintergrund zwischenspeichern
	'und nach dem Archivieren (onExecuted oder onDocChanged(nothing)) den Zwischenspeicher ausräumen

	Private Const INIT_UPB_BUFFER As Integer = 15
	'Ü005
	Private Const DOKKLASSE_BAUBESTAND As String = "BauBestandsDok"
	'/Ü005

	Dim WithEvents myArchDlg As ArchiveDlg
	Dim WithEvents myDoc As ItaDocument	'weil ArchDlg.OnDocumentChanged nicht auslöst, wenn importierte Datei gelöscht wird
	Dim WithEvents myButtonTake As Button



	Private fileCount As Integer
	Private bufferFiles As Boolean
	Private fileBuffer() As SWADATALib.DocData
	Private fileSavePos As Integer
	Private fileGetPos As Integer

	Private myKnownDocID As String
	Private myKnownPartAlias As String
	Private myKnownPartName As String
	Private myKnownPartCount As Integer
	Private myKnownRepZero As Boolean
	Private myKnownPartZero As Boolean

	Dim WithEvents myBackBtn As Button
	Dim WithEvents myNextBtn As Button
	Dim WithEvents ablegenBtn As Button
	Dim WithEvents myCloseBtn As Button

	Dim WithEvents myNavigationWindow As ActiveXWindow
	Dim myRegLblLblNode As Label
	Dim myFolderClassLbl As Label

	Dim WithEvents myQueryResultWindow As QueryResultWindow
	'Ü015
	Dim WithEvents myResultWindow As ResultWindow
	'/Ü015
	Dim WithEvents myFolderTreeView As FolderTreeViewLanguageExtension


Public Const SWP_NOMOVE = 2
Public Const SWP_NOSIZE = 1
Public Const FLAGS = SWP_NOMOVE Or SWP_NOSIZE
Public Const HWND_TOPMOST = -1
Public Const HWND_NOTOPMOST = -2

      ' SetWindowLong nIndex-Konstanten
Private Const GWL_EXSTYLE = -20 ' Ermittelt die erweiterten Fensterstyles
Private Const GWL_HINSTANCE = -6 ' Ermittelt das Instanzhandle der Anwendung
Private Const GWL_HWNDPARENT = -8 ' Ermittelt das Fensterhandle des Elternfensters
Private Const GWL_ID = -12 ' Ermittelt die Fenster ID
Private Const GWL_STYLE = -16 ' Ermittelt die StandardFensterstyles
Private Const GWL_USERDATA = -21 ' Ermittelt einen 32-Bit Anwendungswert des Fensters
Private Const GWL_WNDPROC = -4 ' Ermittelt die Adresse der Standard-Fensterprozedur
Private Const DWL_DLGPROC = 4 ' Ermittelt die Adresse der Standard-Dialogprozedur
Private Const DWL_MSGRESULT = 0 ' Ermittelt das Ergebnis des letzten
' Ergebnisses einer Fensternachricht
Private Const DWL_USER = 8 ' Ermittelt einen 32-Bit Anwendungswert des Dialogs

' einige Standard-Fensterstile
Private Const WS_MAXIMIZEBOX = &H10000 ' Maximierenbutten des Fensters
Private Const WS_MINIMIZEBOX = &H20000 ' Minimierenbutton des Fensters
Private Const WS_CAPTION = &HC00000
Private Const MF_GRAYED = &H1
Private Const MF_DISABLED = &H2
Private Const SC_CLOSE = &HF060
Private Const MF_BYCOMMAND = &H0
Private Const MF_BYPOSITION = &H400&

Private Type RECT
	Left As Long
	Top As Long
	Right As Long
	Bottom As Long
End Type


Declare Function SetWindowPos Lib "user32" Alias "SetWindowPos"  _
           (ByVal hwnd As Long, _
           ByVal hWndInsertAfter As Long, _
           ByVal x As Long, _
            ByVal y As Long, _
            ByVal cx As Long, _
            ByVal cy As Long, _
            ByVal wFlags As Long  ) As Long

Declare Function SetWindowLong Lib "user32.dll" _
  Alias "SetWindowLongA"  ( _
  ByVal hWnd As Long, _
  ByVal nIndex As Long, _
  ByVal dwNewLong As Long) As Long

Private Declare Function GetWindowLong Lib "user32" _
  Alias "GetWindowLongA"  ( _
  ByVal hWnd As Long, _
  ByVal nIndex As Long) As Long

Private Declare Function EnableMenuItem Lib "user32" (ByVal menu As Long, ByVal ideEnableItem As Long, ByVal enable As Long) As Long
Private Declare Function GetSystemMenu Lib "user32" (ByVal hWnd As Long, ByVal revert As Long) As Long
Private Declare Function GetWindowRect Lib "user32" (ByVal hWnd As Long, lpRect As RECT) As Long

Private Declare Function RemoveMenu Lib "user32" _
    (ByVal hMenu As Long, _
     ByVal nPosition As Long, _
     ByVal wFlags As Long) As Long



'************************************************************************
'*	/ Wizard Start
'************************************************************************

Dim myBackCntrl As ActiveXControl
	Dim myNextCntrl As ActiveXControl
	Dim myRegLbl As ActiveXControl
	Dim myRegLblNode As ActiveXControl
	Dim myAblegenCntrl As ActiveXControl
	Dim myCloseCntrl As ActiveXControl
	Dim myFolderClassCntrl As ActiveXControl

Private Sub myNavigationWindow_OnResize()

	On Error Resume Next

	myFolderClassCntrl.Top 	= 10
	myFolderClassCntrl.Left 	= 5
	myFolderClassCntrl.Height	= 30
	myFolderClassCntrl.Width 	= 190

	myBackCntrl.Top 	= 45
	myBackCntrl.Left 	= 5
	myBackCntrl.Height	= 60
	myBackCntrl.Width 	= 90

	myNextCntrl.Top 	= 45
	myNextCntrl.Left 	= 100
	myNextCntrl.Height	= 60
	myNextCntrl.Width 	= 90

	myRegLbl.Top 	= 120
	myRegLbl.Left 	= 5
	myRegLbl.Height	= 30
	myRegLbl.Width 	= 190

	myRegLblNode.Top 	= 135
	myRegLblNode.Left 	= 5
	myRegLblNode.Height	= 12
	myRegLblNode.Width 	= 190

	myAblegenCntrl.Top 	= 170
	myAblegenCntrl.Left 	= 5
	myAblegenCntrl.Height	= 30
	myAblegenCntrl.Width 	= 185

	myCloseCntrl.Top 	= 205
	myCloseCntrl.Left 	= 5
	myCloseCntrl.Height	= 30
	myCloseCntrl.Width 	= 185
End Sub

Private Sub openNavigation



	myNavigationWindow.Open(wsModeless)


	Dim ApplicationWindow As RECT
	GetWindowRect(Application.hWnd,ApplicationWindow)
	myNavigationWindow.Top = ApplicationWindow.Top + 200
	myNavigationWindow.Left = ApplicationWindow.Right - 400

	myNavigationWindow.Height = 280
	myNavigationWindow.Width = 200

	myNavigationWindow.Caption = "1. Akte auswählen"



	'Remove Titlebar

	Dim TmpStyles As Long
	TmpStyles = GetWindowLong	(myNavigationWindow.hWnd, GWL_STYLE)
	TmpStyles = 				TmpStyles Xor WS_MAXIMIZEBOX Xor WS_MINIMIZEBOX
	Call SetWindowLong			(myNavigationWindow.hWnd, GWL_STYLE, TmpStyles)
	SetTopMostWindow			(myNavigationWindow.hWnd,True)
	DisableCloseButton			(myNavigationWindow.hWnd)


	Set myBackCntrl = myNavigationWindow.CreateControl("SERwareControls.Button.1")
	Set myNextCntrl = myNavigationWindow.CreateControl("SERwareControls.Button.1")
	Set myAblegenCntrl = myNavigationWindow.CreateControl("SERwareControls.Button.1")
	Set myRegLbl = myNavigationWindow.CreateControl("SERwareControls.Label.1")
	Set myRegLblNode = myNavigationWindow.CreateControl("SERwareControls.Label.1")
	Set myCloseCntrl = myNavigationWindow.CreateControl("SERwareControls.Button.1")
	Set myFolderClassCntrl = myNavigationWindow.CreateControl("SERwareControls.Label.1")

	myFolderClassCntrl.Top 	= 10
	myFolderClassCntrl.Left 	= 5
	myFolderClassCntrl.Height	= 30
	myFolderClassCntrl.Width 	= 190

	myBackCntrl.Top 	= 45
	myBackCntrl.Left 	= 5
	myBackCntrl.Height	= 60
	myBackCntrl.Width 	= 90

	myNextCntrl.Top 	= 45
	myNextCntrl.Left 	= 100
	myNextCntrl.Height	= 60
	myNextCntrl.Width 	= 90

	myRegLbl.Top 	= 120
	myRegLbl.Left 	= 5
	myRegLbl.Height	= 30
	myRegLbl.Width 	= 190

	myRegLblNode.Top 	= 135
	myRegLblNode.Left 	= 5
	myRegLblNode.Height	= 12
	myRegLblNode.Width 	= 190

	myAblegenCntrl.Top 	= 170
	myAblegenCntrl.Left 	= 5
	myAblegenCntrl.Height	= 30
	myAblegenCntrl.Width 	= 185

	myCloseCntrl.Top 	= 205
	myCloseCntrl.Left 	= 5
	myCloseCntrl.Height	= 30
	myCloseCntrl.Width 	= 185

	Set myBackBtn = myBackCntrl.Control
	Set myNextBtn = myNextCntrl.Control
	Set ablegenBtn = myAblegenCntrl.Control
	Set myCloseBtn = myCloseCntrl.Control

	Dim myRegLblLbl As Label
	Set myRegLblLbl = myRegLbl.Control
	Set myFolderClassLbl = myFolderClassCntrl.Control

	Set myRegLblLblNode = myRegLblNode.Control


	myFolderClassLbl.Caption = "Gewählte Aktenklasse: Keine"
	ablegenBtn.Caption = "Jetzt Ablegen"
	myCloseBtn.Caption = "Ablage abbrechen"
	myBackBtn.Caption = "Zurück"
	myNextBtn.Caption = "Weiter"
	myBackBtn.Enabled = False
	ablegenBtn.Enabled = False

	myRegLblLbl.Caption = "Gewähltes Register zur Ablage:"
	myRegLblLblNode.Caption = "Keines"

End Sub
Public Function DisableCloseButton(hWnd As Long) As Boolean

'PURPOSE: Removes X button from a form
'EXAMPLE: DisableCloseButton Me
'RETURNS: True if successful, false otherwise
'NOTES:   Also removes Exit Item from
'         Control Box Menu


    Dim lHndSysMenu As Long
    Dim lAns1 As Long, lAns2 As Long


    lHndSysMenu = GetSystemMenu(hWnd, 0)

    'remove close button
    lAns1 = RemoveMenu(lHndSysMenu, 6, MF_BYPOSITION)

   'Remove seperator bar
    lAns2 = RemoveMenu(lHndSysMenu, 5, MF_BYPOSITION)

    'Return True if both calls were successful
    DisableCloseButton = (lAns1 <> 0 And lAns2 <> 0)

End Function

Public Function SetTopMostWindow(hWnd As Long, Topmost As Boolean) _
         As Long

         If Topmost = True Then 'Make the window topmost
            SetTopMostWindow = SetWindowPos(hWnd, HWND_TOPMOST, 0, 0, 0, _
               0, FLAGS)
         Else
            SetTopMostWindow = SetWindowPos(hWnd, HWND_NOTOPMOST, 0, 0, _
               0, 0,FLAGS)
            SetTopMostWindow = False
         End If
      End Function


Private Sub ablegenBtn_OnClicked()
On Error GoTo abort
Dim myFolder As IDocument
Set myFolder = FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg.Document
  Application.UIContext.UICommand(FilingEnvironmentWindow.ArchiveViewWindow.hWnd,26100)
  FilingEnvironmentWindow.FolderViewWindow.ArchiveWindow.ArchiveDlg.Document.Commit
  resetAllControls(FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg)
  resetAllControls(FilingEnvironmentWindow.FolderViewWindow.ArchiveWindow.ArchiveDlg)

	If myFolder.Archived Then
	  	Application.ShowMessage("Ihr Dokument wurde erfolgreich mit der gewählten Akte verknüpft!")
	  	If MsgBox("Möchten Sie noch ein Dokument in diese Akte ablegen?",vbYesNo+vbQuestion,"") = 7 Then
	  		myNavigationWindow.Close
			FilingEnvironmentWindow.Close
		Else
			FilingEnvironmentWindow.ActivePane = fpFolderViewWindow
			myNavigationWindow.Caption = "2. Register auswählen"
			myNextBtn.Enabled = True
			ablegenBtn.Enabled = False
			Call myFolderTreeView_OnSelChange
		End If
	End If
Exit Sub
abort:
End Sub

Private Sub FilingEnvironmentWindow_OnArchiveFolderClassChanged(ByVal FolderClass As SWAMDLib.ArchiveFolderClass, ByRef Handled As Boolean)
	Set myFolderTreeView = FilingEnvironmentWindow.FolderViewWindow.FolderTreeView
	myFolderClassLbl.Caption = "Gewählte Aktenklasse: " + Application.System.FolderTypes.ItemByGUID(FilingEnvironmentWindow.ActiveArchiveFolderClass).Name
End Sub

Private Sub myCloseBtn_OnClicked()
	If MsgBox("Möchten Sie die Ablage wirklich beenden?",vbYesNo,"Abbrechen") = 7 Then
		Exit Sub
	End If

  	SER_resetAllControlsDirtyStatus(FilingEnvironmentWindow.FolderViewWindow.ArchiveWindow.ArchiveDlg)
  	SER_resetAllControlsDirtyStatus(FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg)

  	Dim myDoc As ItaDocument
  	Set myDoc = FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg.Document
	If myDoc.Representations.Count > 0 Then
		myDoc.Representations.RemoveAll
	End If



	myNavigationWindow.Close
	FilingEnvironmentWindow.Close
End Sub



Private Sub myNextBtn_OnClicked()

On Error Resume Next

Select Case FilingEnvironmentWindow.ActivePane
			Case enumFilingEnvPane.fpQueryResultWindow

				If Not FilingEnvironmentWindow.QueryResultWindow.ResultWindow.ResultList.SelectedCount = 0 Then
					myBackBtn.Enabled = True
					Application.UIContext.UICommand(FilingEnvironmentWindow.QueryResultWindow.hWnd,25276)
					FilingEnvironmentWindow.ActivePane = fpFolderViewWindow
					FilingEnvironmentWindow.FolderViewWindow.ArchiveWindow.ArchiveDlg.Document = FilingEnvironmentWindow.QueryResultWindow.ResultWindow.ResultList.SelectedDocument(0)
					myRegLblLblNode.Caption = myFolderTreeView.SelectedNode.Name
					ablegenBtn.Enabled = False
					myNavigationWindow.Caption = "2. Register auswählen"
						Else
						Application.ShowMessageBox(FilingEnvironmentWindow.hWnd,"Wählen Sie zunächst eine Akte aus.","",)
				End If



			Case enumFilingEnvPane.fpFolderViewWindow
				If FilingEnvironmentWindow.FolderViewWindow.FolderTreeView.SelectedNode.Type = FMNodeType.NT_STATIC Then

					FilingEnvironmentWindow.ActivePane = fpArchiveViewWindow
					ablegenBtn.Enabled = True
					myNextBtn.Enabled = False
					myNavigationWindow.Caption = "3. Dokument ablegen"
				Else
					Application.ShowMessageBox(FilingEnvironmentWindow.hWnd,"In diesem Register kann kein Dokument abgelegt werden." + vbCrLf + "Bitte korrigieren Sie Ihre Auswahl","",)
				End If
		End Select
End Sub

Private Sub myBackBtn_OnClicked()
Select Case FilingEnvironmentWindow.ActivePane
			Case enumFilingEnvPane.fpArchiveViewWindow
				FilingEnvironmentWindow.ActivePane = fpFolderViewWindow
				myNavigationWindow.Caption = "2. Register auswählen"
				myNextBtn.Enabled = True
				ablegenBtn.Enabled = False
			Case enumFilingEnvPane.fpFolderViewWindow
			    myNavigationWindow.Caption = "1. Akte auswählen"
				myBackBtn.Enabled = False
				ablegenBtn.Enabled = False
				FilingEnvironmentWindow.ActivePane = enumFilingEnvPane.fpQueryResultWindow
	End Select

End Sub


'************************************************************************
'*	/ Wizard Ende
'************************************************************************


'************************************************************************
'*	ENVIRONMENT LEBENSZYKLUS
'************************************************************************

Private Sub FilingEnvironmentWindow_OnInit()

'Ü009
	If Not FilingEnvironmentWindow.QueryResultWindow Is Nothing Then
		Set myQueryResultWindow = FilingEnvironmentWindow.QueryResultWindow
		'Ü015
		Set myResultWindow = myQueryResultWindow.ResultWindow
		'/Ü015
	End If
	If Not FilingEnvironmentWindow.FolderViewWindow Is Nothing Then
		Set myFolderTreeView = FilingEnvironmentWindow.FolderViewWindow.FolderTreeView
	End If
'/Ü009

'*	aktuelle Akte beim Start
	'Ü002
	Set MyASF_aktuelle_Akte = ASF_aktuelle_Akte
	Set ASF_aktuelle_Akte = Nothing
	'/Ü002
	'Ü008
'*	Set MyASF_aktuelles_Register = ASF_aktuelles_Register
'*	Set ASF_aktuelles_Register = Nothing
	'/Ü008

	ReDim fileBuffer(INIT_UPB_BUFFER)
	fileSavePos = -1
	fileGetPos = 0
	If FilingEnvironmentWindow.ArchiveViewWindow Is Nothing Then
		myArchDlg= Nothing
	Else
		Set myArchDlg= FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg
		Set myDoc = myArchDlg.Document
		Set myButtonTake= myArchDlg.ControlByName("btnTakeNext")
	End If

	myKnownRepZero= False
	myKnownPartCount= False

	If Not myQueryResultWindow Is Nothing Then
		myQueryResultWindow.RibbonBar.Category(0).Active = True
	End If



Set myNavigationWindow = Application.CreateActiveXWindow(Application.MetaData.ActiveXWindowDefinitions.ItemByName("GefuehrteAblage").GUID,wtNone)
openNavigation

End Sub

Private Sub FilingEnvironmentWindow_OnDebugStop()					'wird nicht aufgerufen !!!!!!

	Dim i As Integer
	Dim imax As Integer
	imax= INIT_UPB_BUFFER
	If imax < fileSavePos Then imax= fileSavePos
	For i= 0 To imax
		Set fileBuffer(i)= Nothing
	Next
	ReDim fileBuffer(INIT_UPB_BUFFER)
	fileSavePos= -1
	fileGetPos= 0

If Not myNavigationWindow Is Nothing Then
	myNavigationWindow.Close
	Set myNavigationWindow = Nothing
End If

End Sub

Private Sub FilingEnvironmentWindow_OnDebugResume()

	Dim ret As Integer

	If FilingEnvironmentWindow.ArchiveViewWindow Is Nothing Then
		myArchDlg= Nothing
	Else
		Set myArchDlg= FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg
		Set myDoc = myArchDlg.Document
		Set myButtonTake= myArchDlg.ControlByName("btnTakeNext")
	End If

	ReDim fileBuffer(INIT_UPB_BUFFER)
	fileSavePos= -1
	fileGetPos= 0

	Call setArchDlgCtrls

	myKnownRepZero= False
	myKnownPartCount= False

					Dim idct 		As SWACTRLSLib.Edit
					Set idct= myArchDlg.ControlByName("TabEinordnung_ASFDokID")
					If Not idct Is Nothing Then
						idct.Data= ASF_IDs_getNextDocId()  'ID muss mit nächster Laufnummer vorbelegt werden
					End If


Set myFolderTreeView = FilingEnvironmentWindow.FolderViewWindow.FolderTreeView

End Sub

Private Sub FilingEnvironmentWindow_OnRibbonBarInitialized()




	Dim XRbPnl As RibbonPanel
	Dim XRbBtn As RibbonButton
	Set XRbPnl = FilingEnvironmentWindow.RibbonBar.Category(0).AddPanel("IDVorlagen", "Vorlagen")
	Set XRbBtn = XRbPnl.AddElement(rtButton, "IDNeuVonVorlage", "neu von Vorlage", "erstellt ein neues Dokument auf Basis einer Vorlage", 77, 77)
	'SER/GSC 2010-09-20

	Set XRbPnl = FilingEnvironmentWindow.RibbonBar.Category(0).AddPanel("IDSystem", "Systemfunktionen")
	Call SER_ADD_DELETE_RIBBON_ELEMENTS(True,FilingEnvironmentWindow,"IDSystem","IDBarcode", "Barcode erzeugen", "erzeugt einen Barcode im Internet-Explorer")
	Call SER_ADD_DELETE_RIBBON_ELEMENTS(True,FilingEnvironmentWindow,"IDSystem","IDMails", "Mails holen", "holt Mail(s) von Outlook")
	'Set XRbBtn = XRbPnl.AddElement(rtButton, "IDBarcode", "Barcode erzeugen", "erzeugt einen Barcode im Internet-Explorer", -1,-1)
	'Set XRbBtn = XRbPnl.AddElement(rtButton, "IDMails", "Mails holen", "holt Mail(s) von Outlook",-1,-1)
	'Ü005
	If Not Application.MetaData.ArchiveDocClasses.ItemByGUID (FilingEnvironmentWindow.ActiveArchiveDocClass) Is Nothing Then
		If Application.MetaData.ArchiveDocClasses.ItemByGUID (FilingEnvironmentWindow.ActiveArchiveDocClass).Name = DOKKLASSE_BAUBESTAND  Then
			Set XRbPnl = FilingEnvironmentWindow.RibbonBar.Category(0).AddPanel("CADResult_Panel", "CAD Dokument bearbeiten")
			Call SER_ADD_DELETE_RIBBON_ELEMENTS(True,FilingEnvironmentWindow,"CADResult_Panel","CADDoArchive", "Neu ablegen", "CAD Dokument neu ablegen",08)
		End If
	End If
	'/Ü005




End Sub

Private Sub FilingEnvironmentWindow_OnClose()

'Ü012
	Application.Globals.Remove ("Poststueck")
'/Ü012
	If Application.Globals.Exists ("ASF_Aktuelles_Register") Then
		Application.Globals.Remove ("ASF_Aktuelles_Register")
	End If
	If Application.Globals.Exists ("ASF_Aktuelle_FolderViewWindow") Then
		Application.Globals.Remove ("ASF_Aktuelle_FolderViewWindow")
	End If

	If Not myNavigationWindow Is Nothing Then
		On Error Resume Next
		myNavigationWindow.Close
	End If

End Sub



'************************************************************************
'*	ARCHIVE DLG LEBENSZYKLUS UND INTERAKTION
'************************************************************************

Private Sub FilingEnvironmentWindow_OnShowRibbonElement(ByVal ElementID As Long, ByRef Show As Boolean)
	Select Case ElementID
	Case 25276
		Show = False
	Case 26808
		Show = False
	Case 26806
		Show = False
	Case 26804
		Show = False
	End Select
End Sub

Private Sub myArchDlg_OnInit()
	Dim lct As SWACTRLSLib.Label
	Call setArchDlgCtrls
End Sub



Private Sub myDoc_OnRepresentationDeleted(ByVal Representation As Long)			'geht nicht - wird nicht aufgerufen !!
	If myDoc.Representations.Count = 0 Then
		Call myArchDlg_OnDocumentChanged(myArchDlg.Document)
		'Ü004  GBA Files bleiben im Hintergrundspeicher hängen, wenn "Werte beibehalten" angehakt ist
		If fileSavePos >= 0 Then
			If myDoc.Representations.Count = 0 Then
				'Set myDoc= newDoc
				Call AddRepFromBuffer(myDoc)
			ElseIf myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments.Count= 0 Then
				'Set myDoc= newDoc
				Call AddRepFromBuffer(myDoc)
			Else
				Exit Sub
			End If
		End If
		'/Ü004
	End If
End Sub

Private Sub myButtonTake_OnClicked()
	Set myDoc = myArchDlg.Document
	Call AddRepFromBuffer(myDoc)
End Sub

Private Sub myArchDlg_OnDocumentChanged(ByVal newDoc As SWAFRAMELib.IDocument)
	Dim i As Integer
	Dim cct As SWACTRLSLib.CheckBox

	Set myDoc= newDoc
	'Ü003

	If Not FilingEnvironmentWindow.ArchiveViewWindow.ViewerWindow.DocViewer Is Nothing Then
		If myDoc.Representations.Count > 0 Then
			If FilingEnvironmentWindow.ArchiveViewWindow.ViewerWindow.DocViewer.PartDocCount <>  myDoc.Representations(0).PartDocuments.Count Then
				If Not ASFmail Is Nothing Then
					myDoc.Representations(0).PartDocuments.RemoveAll
					myDoc.Representations(0).PartDocuments.AddNew.DataObject = ASFmail.MSGFile
					If ASFmail.AttachmentCount>0 Then
						For i = 0 To ASFmail.AttachmentCount-1
							myDoc.Representations(0).PartDocuments.AddNew.DataObject = ASFmail.Attachment(i)
						Next
					End If
					Set ASFmail = Nothing
				End If

			End If
		End If
	End If
	'/Ü003

	Set cct= myArchDlg.ControlByName("cbKeepValues")
	If Not cct Is Nothing Then
		If cct.Checked Then
			Exit Sub
		End If
	End If

	If fileSavePos >= 0 Then
		If myDoc.Representations.Count = 0 Then
			'Set myDoc= newDoc
			Call AddRepFromBuffer(myDoc)
		ElseIf myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments.Count= 0 Then
			'Set myDoc= newDoc
			Call AddRepFromBuffer(myDoc)
		Else
			Exit Sub
		End If

		Exit Sub				' myArchDlg.execute löst events aus (auch dieses) -> winCube hängt sich auf

		Set cct= myArchDlg.ControlByName("cbKeepValues")
		If Not cct Is Nothing Then
			If cct.Checked Then
				If myDoc.Representations.Count > 0 Then
					If myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments.Count= 1 Then
						myArchDlg.Execute
					End If
				End If
			End If
		End If
	End If

End Sub



'************************************************************************
'*	BENUTZER INTERAKTION
'************************************************************************

Private Sub FilingEnvironmentWindow_OnChangeArchiveDocClass(ByVal DocClass As SWAMDLib.ArchiveDocClass, ByRef Handled As Boolean)

'*	aktuelle Akte wiederbeleben für Übergabe an Dokument(Ablagedialog-Script)
	'Ü002
	Set ASF_aktuelle_Akte = MyASF_aktuelle_Akte
	'/Ü002

	'Ü008
'*	Set ASF_aktuelles_Register = MyASF_aktuelles_Register
	'/Ü008

	If FilingEnvironmentWindow.ArchiveViewWindow Is Nothing Then
		myArchDlg= Nothing
	Else
		Set myArchDlg= FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg
		Set myDoc = myArchDlg.Document
		Set myButtonTake= myArchDlg.ControlByName("btnTakeNext")
	End If
End Sub

Private Sub FilingEnvironmentWindow_OnArchiveDocClassChanged(ByVal DocClass As SWAMDLib.ArchiveDocClass, ByRef Handled As Boolean)

'*	aktuelle Akte wieder leeren
	'Ü002
	Set ASF_aktuelle_Akte = Nothing
	'/Ü002

	'Ü008
'*	Set ASF_aktuelles_Register = Nothing
	'/Ü008

	'Ü005
	If DocClass.Name <> DOKKLASSE_BAUBESTAND Then
		If Not FilingEnvironmentWindow.RibbonBar.Category(0).PanelByID("CADResult_Panel") Is Nothing Then
			FilingEnvironmentWindow.RibbonBar.Category(0).RemovePanelByID ("CADResult_Panel")
		End If
	Else
		If  FilingEnvironmentWindow.RibbonBar.Category(0).PanelByID("CADResult_Panel") Is Nothing Then
			FilingEnvironmentWindow.RibbonBar.Category(0).AddPanel("CADResult_Panel", "CAD Dokument bearbeiten")
			Call SER_ADD_DELETE_RIBBON_ELEMENTS(True,FilingEnvironmentWindow,"CADResult_Panel","CADDoArchive", "Neu ablegen", "CAD Dokument neu ablegen",08)
		End If
	End If
	'/Ü005
End Sub


Private Sub FilingEnvironmentWindow_OnFileDrop(ByVal File As SWADATALib.DocData, ByRef Handled As Boolean)

	Dim docImDlg	As Boolean
	Dim fso   		As Object
	Dim objFolder	As Object
	Dim objfile 	As Object
	Dim myDocData 	As DocData
	Set fso = CreateObject("Scripting.FileSystemObject")

	If fso.folderexists(File.fileName) Then
		Handled= True

    	'Verweis auf übergeordneten Ordner holen
   		Set objFolder = fso.GetFolder(File.fileName)
   		'Ü004

   		If fileSavePos < 0 And objFolder.Files.Count > 1 Then
			'GBA 2011-02-10
			'neues Feature: Ganzer Ordner(Inhalt) kann auch in 1 Dokument zusammengefasst werden
			'Macht nur Sinn, wenn:
			' * keine Files im Hintergrund gespeichert sind, denn dann kommt dieser Ordnerinhalt danch
			' * der Ordner mehrere Dateien enthält

			Dim ret As Variant
			Begin Dialog UserDialog 430,140,"Importieren mehrerer Dateien",.multiImport ' %GRID:10,7,1,1
				Text 20,14,260,35,"Dieser Ordner enthält mehrere Dateien. Wie möchten Sie vorgehen?",.Text1
				PushButton 20,56,390,28,"Alle Dateien in 1 winCube Dokument zusammenfassen",.btnTogether
				PushButton 20,98,390,28,"Jede Datei als separates winCube Dokument archivieren",.btnSeperate
				CancelButton 290,14,120,28
			End Dialog
			Dim dlg As UserDialog
			ret= Dialog(dlg)

			'MsgBox "ret = " & ret
			If ret = 0 Then Exit Sub

			If ret = 1 Then
				'alle Dateien in 1 Dokument
				Set myDoc = myArchDlg.Document

				Dim newRep As Representation
				Dim newPart As PartDocument
				Dim firstPart As PartDocument

				If myDoc.Representations.Count = 0 Then
					Set newRep= myDoc.Representations.AddNew()
				Else
					Set newRep= myDoc.Representations(myDoc.Representations.DefaultRepresentation)
				End If

				For Each objfile In objFolder.Files
					Set myDocData= New DocData
					myDocData.SetFile(objfile, False)
					Set newPart= newRep.PartDocuments.AddNew()
					Set newPart.DataObject= myDocData
					Set myDocData= Nothing
		        Next
		        Set firstPart= newRep.PartDocuments(0)
				'Ü010
				Call ASF_fill_file_control(firstPart.DataObject, myArchDlg, firstPart.DataObject.Alias, "AddRepFromBuffer")
				'/Ü010
							Exit Sub
			End If
   		End If

        bufferFiles= True
        For Each objfile In objFolder.Files
			Set myDocData= New DocData
			myDocData.SetFile(objfile, False)
        	MergeFile2Buffer(myDocData)
			Set myDocData= Nothing
        Next
        '/Ü004

		'Zuletzt: falls ablagedialog 'leer' dann gleich 1. Seite reinnehmen:
		myArchDlg_OnDocumentChanged(myArchDlg.Document)
		Exit Sub

	Else  'kein Verzeichnis
		Dim pseudoHandled As Boolean
		Set myDoc= myArchDlg.Document
		docImDlg= (myDoc.Representations.Count > 0)
		If docImDlg Then docImDlg= (myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments.Count > 0)

		If fileSavePos < 0 Then		'Buffer leer?
			If docImDlg Then
				If Not isKnownDoc() Then
					'fileCount= myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments.Count
					fileCount= 1
				End If
			Else
				Call InitFileInsert(pseudoHandled)
			End If
		Else
			If Not isKnownDoc() Then
				Call InitFileInsert(pseudoHandled)
			End If
		End If
	End If

	If pseudoHandled Then
		Handled= True
		Exit Sub
	End If

	Call DoFileInsert(File, Handled)

	Set fso= Nothing

End Sub

Private Sub FilingEnvironmentWindow_OnFileDropped(ByVal File As SWADATALib.DocData, ByRef Handled As Boolean)

	Dim fso As Object
	Set fso = CreateObject("Scripting.FileSystemObject")

	Call DoFileInserted()

	If fso.folderexists(File.fileName) Then
		Handled= True
		Exit Sub
	End If

	'wichtig, da in isKnownDoc das aktuelle Doc (quasi als Signatur) gemerkt wird
	Dim egal As Boolean
	egal= isKnownDoc()

	Set fso= Nothing

End Sub

Private Sub FilingEnvironmentWindow_OnFileOpened(ByVal File As SWADATALib.DocData, ByRef Handled As Boolean)

	Call DoFileInserted()

End Sub

Private Sub FilingEnvironmentWindow_OnFileImport(ByRef Handled As Boolean)

	Call InitFileInsert(Handled)
	Exit Sub



	'Wird aufgerufen, sobald der Button Import gedrückt wird
	'Initialisierungen, damit man im open weis, dass ein neues Paket an Files beginnt
	fileCount= 0

	'If Not FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg.Document Is Nothing Then
	If fileSavePos >= 0 Then
		'MsgBox "Es sind noch importierte Dateien vorhanden"
		Dim ret As Variant
		Begin Dialog UserDialog 500,140,"Dateien zwischengespeichert",.multiImport ' %GRID:10,7,1,1
			Text 20,14,330,35,"Es sind noch (alte) Dateien zwischengespeichert. Wie möchten Sie vorgehen?",.Text1
			PushButton 20,56,460,28,"Neue Dateien zum aktuellen winCube Dokument hinzufügen",.btnCurDok
			PushButton 20,98,460,28,"Neue Dateien nach den alten Dateien zwischenspeichern",.btnAppend
			CancelButton 360,14,120,28
		End Dialog
		Dim dlg As UserDialog
		ret= Dialog(dlg)
		If ret= 0 Then
			Handled= True
			Exit Sub
		End If
		bufferFiles= (ret = 2)

	Else
		bufferFiles = False
	End If

End Sub

Private Sub FilingEnvironmentWindow_OnFileOpen(ByVal File As SWADATALib.DocData, ByRef Handled As Boolean)

	Call DoFileInsert(File, Handled)
	Exit Sub

	'Wird für jedes File, das Importiert wird, separat aufgerufen - Reihenfolge open1, opened1, open2, opened2, ...

'	Dim retX As Integer
	Dim bct As SWACTRLSLib.Button
	Dim cct As SWACTRLSLib.CheckBox
	Set bct= Nothing


	If Not myArchDlg Is Nothing Then
		Set bct= myArchDlg.ControlByName("btnTakeNext")
	End If

	fileCount= fileCount + 1
	'If Not bct Is Nothing And Application.System.User.User = "SERbachmayrg" Then 'And Not bufferFiles Then
	If 1 = 1 Then

		'If (fileCount = 1 And fileSavePos >= 0) Or _
		If (fileCount = 2 And fileSavePos < 0) Then


			Dim ret As Variant

			Begin Dialog UserDialog 430,140,"Importieren mehrerer Dateien",.multiImport ' %GRID:10,7,1,1
				Text 20,14,220,35,"Sie importieren mehrere Dateien. Wie möchten Sie vorgehen?",.Text1
				PushButton 20,56,390,28,"Alle Dateien in 1 winCube Dokument zusammenfassen",.btnTogether
				PushButton 20,98,390,28,"Jede Datei als separates winCube Dokument archivieren",.btnSeperate
				CancelButton 290,14,120,28
			End Dialog
			Dim dlg As UserDialog
			ret= Dialog(dlg)


			'retX= MsgBox("Sie importieren mehrere Dateien." & vbCrLf & vbCrLf & _
			'			"Wollen Sie alle Dateien zusammen als 1 Dokument archivieren (= JA), " & vbCrLf & _
			'			"oder jede Datei als separates Dokument archivieren? (= NEIN)", vbYesNo)

			'bufferFiles= (retX = vbNo)
			bufferFiles= (ret = 2)

			If bufferFiles And Not myArchDlg Is Nothing Then
				Set cct= myArchDlg.ControlByName("cbKeepValues")
				If Not cct Is Nothing Then cct.Checked= True
			End If
			' vbYes -> 6&
			' vbNo -> 7&
		End If
	End If


'*************************************************


	Call MergeFile2Buffer(File)
	If bufferFiles Then
		Handled= True
	End If
End Sub

Private Sub FilingEnvironmentWindow_OnDocumentExecute(ByVal Doc As SWAFRAMELib.IDocument, ByRef Continue As Boolean, ByRef Handled As Boolean)

'Ü006
	If Application.System.User.User = "PerformanceTest" Then
		Dim XItaDoc As ItaDocument
		Set XItaDoc = Doc
		ASF_Performance_writePerformanceLogEntry "'Dokument speichern' ausgelöst. Dokumentklasse=" & Application.System.DocumentTypes.ItemByGUID(XItaDoc.DocumentTypeGUID).FullyQualifiedName
	End If
'/Ü006

End Sub

Private Sub FilingEnvironmentWindow_OnDocumentExecuted(ByVal Doc As SWAFRAMELib.IDocument, ByVal Succeeded As Boolean, ByRef Handled As Boolean)

'Ü006
	If Application.System.User.User = "PerformanceTest" Then
		ASF_Performance_writePerformanceLogEntry "'Dokument gespeichert' ausgelöst. DokumentID=" & Doc.DocumentID
	End If
'/Ü006

	Dim cct 		As SWACTRLSLib.CheckBox
	Dim nextDoc 	As ItaDocument
	Dim nextiDoc 	As IDocument
	Dim deskDef 	As DescriptorDefinition
	Dim deskBez 	As IDescriptor
	Dim deskDate 	As IDescriptor
	Dim deskDokId   As IDescriptor
	Dim nameSplit() As String
	Dim nameOnly 	As String
	Dim anzIter 	As Integer
	Dim anzFail		As Integer
	Dim idct 		As SWACTRLSLib.Edit
	Dim XNode As CNode
	Dim XFolderViewWindow As FolderViewWindow
	Dim baseDocStr  As String
	Dim baseDocID   As Long
	Dim lastDoc As ItaDocument					'für Ortsbezug, Eingefügt: GBA 2015-10-13 aus anderem Filing View (Standard aus Akte)
	Dim xi As Integer							'- " -
	Dim assignedPD  As String					'Ü014 - 04.10.2015 - GBA
	Dim cAssigPD	As SWACTRLSLib.SelectionBox
	Dim wfErr		As Integer
	Dim wfAnz		As Integer
	Dim strErrMsg	As String
	Dim myPI		As wfProcessInstance		'/Ü014 GBA
	Dim msgText	    As String

	On Error GoTo fError
	If Succeeded Then
		'Falls die Ablageumgebung aus einem Akt aufgerufen wurde, muss das Dokument dem Akt
		'hinzugefügt werden, aber nur, wenn das Akten-Fenster offen ist
		If Not FilingEnvironmentWindow.FolderViewWindow Is Nothing Then
			Set XFolderViewWindow = FilingEnvironmentWindow.FolderViewWindow
			If XFolderViewWindow.Valid Then
				If Not XFolderViewWindow.FolderTreeView Is Nothing Then			'Ü013 GBA 2014-04-29 Aktuelles Register holen
					If Not XFolderViewWindow.FolderTreeView.SelectedNode Is Nothing Then
						Set XNode =	XFolderViewWindow.FolderTreeView.SelectedNode
					Else
						Set XNode =	XFolderViewWindow.FolderTreeView.FocusedNode
					End If
				End If
				If XNode Is Nothing And Application.Globals.Exists ("ASF_Aktuelles_Register") Then  '/Ü013
					Set XNode =	Application.Globals.Item  ("ASF_Aktuelles_Register") 'FolderViewWindow.FolderTreeView.FocusedNode
				End If
				'If Not FilingEnvironmentWindow.FolderViewWindow.FolderTreeView.SelectedNode Is Nothing Then
				'	Set XNode =	FilingEnvironmentWindow.FolderViewWindow.FolderTreeView.SelectedNode
				'End If
			End If
		End If

		Set cct= myArchDlg.ControlByName("cbKeepValues")
		If Not cct Is Nothing Then
			If cct.Checked Then
				anzIter= 0
				anzFail= 0

				'Ü014 - 04.10.2015 - GBA
				'Information holen: ob/welcher Workflow zu starten ist
				assignedPD= ""
				Set cAssigPD= myArchDlg.ControlByName("SbVorgang")
				If Not cAssigPD Is Nothing Then
					assignedPD= cAssigPD.Data
				End If
				wfAnz= 0
				wfErr= 0
				'/Ü014 - 04.10.2015 - GBA

				baseDocID= 0
				If fileSavePos >= 0 Then		'2011-08-03 GBA: DocumentID's in einem Zug reservieren
					baseDocStr= ASF_IDs_getNextDocId(fileSavePos + 1)
					If baseDocStr = "" Then
						MsgBox ((fileSavePos + 1) & " weitere Dokumente können nicht archiviert werden, " & _
								"da keine DocumentID's zur Verfügung stehen!",vbExclamation, "Generierung DocumentID fehlgeschlagen")
						Exit Sub
					End If
					baseDocID= CLng(baseDocStr)
					If baseDocID < fileSavePos + 1 Then
						MsgBox ((fileSavePos + 1) & " weitere Dokumente können nicht archiviert werden, " & _
								"da keine korrekten DocumentID's generiert werden konntn!", vbExclamation, _
								"Generierung DocumentID fehlgeschlagen")
						Exit Sub
					End If
					baseDocID= baseDocID - fileSavePos - 1
				End If

				Set lastDoc = Doc					'für Ortsbezug, Eingefügt: GBA 2015-10-13 (1 Zeile)
				Do While (fileSavePos >= anzFail)

					Set nextDoc= Application.System.CreateDocument(TDocumentType.ItaDocument)
					Set nextiDoc= nextDoc

					nextiDoc.CopyDescriptors(Doc)

					Set deskDef= Application.System.DescriptorDefinitions.ItemByName("ASF_Bezeichnung")
					If deskDef Is Nothing Then
						MsgBox "DeskripterDEFINITION  ASF_Bezeichnung  nicht gefunden -> SER-GBA verständigen", vbCritical
						Exit Sub
					End If
					Set deskBez= nextDoc.Descriptors.ItemByGUID(deskDef.GUID)
					If deskBez Is Nothing Then
						MsgBox "Deskripter  ASF_Bezeichnung  nicht gefunden -> SER-GBA verständigen", vbCritical
						Exit Sub
					End If

					'*  Ü007: 13.04.2011 GBA: CR 14: Anlassdatum nicht mehr mit Filedatum überschreiben
					'*  siehe auch ArchiveDlg Standard & BauBestandsDok, ASF GSC Global Skript: (ASF-fill_file_control)

					'Set deskDef= Application.System.DescriptorDefinitions.ItemByName("ASF_Anlassdatum")
					'If deskDef Is Nothing Then
					'	MsgBox "DeskripterDEFINITION  ASF_Anlassdatum  nicht gefunden -> SER-GBA verständigen", vbCritical
					'	Exit Sub
					'End If
					'Set deskDate= nextDoc.Descriptors.ItemByGUID(deskDef.GUID)
					'If deskDate Is Nothing Then
					'	MsgBox "Deskripter  ASF_Anlassdatum  nicht gefunden -> SER-GBA verständigen", vbCritical
					'	Exit Sub
					'End If

					Set deskDef= Application.System.DescriptorDefinitions.ItemByName("ASF_Dok_ID")
					If deskDef Is Nothing Then
						MsgBox "DeskripterDEFINITION  ASF_Dok_ID  nicht gefunden -> SER-GBA verständigen", vbCritical
						Exit Sub
					End If
					Set deskDokId= nextDoc.Descriptors.ItemByGUID(deskDef.GUID)
					If deskDokId Is Nothing Then
						MsgBox "Deskripter  ASF_Dok_ID  nicht gefunden -> SER-GBA verständigen", vbCritical
						Exit Sub
					End If

					nameSplit= Split(fileBuffer(fileGetPos).fileName, "\")
					nameOnly= nameSplit(UBound(nameSplit))
					deskBez.RemoveValues
					'Ü011
					'deskBez.AddValue(nameOnly)
					deskBez.AddValue(fileBuffer(fileGetPos).Alias)
					'/Ü011


					'*  Ü007: 13.04.2011 GBA: CR 14: Anlassdatum nicht mehr mit Filedatum überschreiben
					'*  siehe auch ArchiveDlg, ASF GSC Global Skript: (ASF-fill_file_control)
					'deskDate.RemoveValues
					'deskDate.AddValue(fileBuffer(fileGetPos).Filedate)


					'* 2011-08-03 GBA: DocumentID's in einem Zug reservieren
					If deskDokId.ValueCount > 0 Then deskDokId.RemoveValues
					deskDokId.AddValue(CStr(baseDocID + anzIter))

					'TabEinordnung_ASFDokID.Data = ASF_IDs_getNextDocId()
					'If anzIter = 0 Then		'1. automatisch archivierte Dok übernimmt die ASFDokID vom Dlg (bereits incrementiert)
					'	Set idct= myArchDlg.ControlByName("TabEinordnung_ASFDokID")
					'	If Not idct Is Nothing Then
					'		If deskDokId.ValueCount > 0 Then
					'			deskDokId.RemoveValues
					'			deskDokId.AddValue(idct.Data)
					'		End If
					'	End If
					'Else
					'	deskDokId.RemoveValues
					'End If
					'If deskDokId.ValueCount > 0 Then	'Nach dem 1. Speichern wird die Laufnummer gleich vorbelegt
					'	If deskDokId.Value(0) = LastStoredDokID Then  'ID muss unterschiedlich sein
					'		deskDokId.RemoveValues
					'		deskDokId.AddValue(ASF_IDs_getNextDocId())
					'	End If
					'Else
					'	deskDokId.AddValue(ASF_IDs_getNextDocId())
					'End If
					'/ 2011-08-03 GBA: DocumentID's in einem Zug reservieren


					Call AddRepFromBuffer(nextDoc)

					Set nextDoc.Database = Doc.Database
					nextiDoc.FilingView  = Doc.FilingView

					LastStoredDokID= deskDokId.Value(0)

					Dim MyASF_RLOrtsbezug 		As SWARESULLib.ResultList				'5x Dim für Ortsbezug, Eingefügt: GBA 2015-10-13 aus anderem Filing View (Standard aus Akte)
					Dim MyASF_RLOrtsbezugLE 	As SWARESULLib.ResultListLanguageExtension
					Dim XSourceOrtsbezug As ItaDocument
					Dim xl As Long
					Dim XNewOrtsbezug As ItaDocument

					nextDoc.Commit

					If nextDoc.Archived Then
						'Dokument zum Akt hinzufügen
						If Not XNode Is Nothing Then
							XNode.Elements.AddNew(LT_DOCUMENT).Link = nextDoc.DocumentID
						End If

						'für Ortsbezug, Eingefügt: GBA 2015-10-13 aus anderem Filing View (Standard aus Akte)
							'Nun müssen die Ortsbezüge des zuletzt archivierten Dokuments als Kopie in das nächste Dokument übernommen werden

						'Ortsbezüge des zuletzt archivierten Dokuments in eine Trefferliste laden
						ASF_Ortsbezug_initDialogAndObjectsNew(MyASF_RLOrtsbezug, _
							MyASF_RLOrtsbezugLE, _
							FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg.ControlByName("TabOrtsbezug_CCResultList"), _
							"Ortsbezug", "IndexOnly", "20100101", _
							lastDoc.InternalDescriptors.ItemByGUID("UUID").Value(0))

						Set deskDef = Application.System.DescriptorDefinitions.ItemByName("ASF_Dok_DokFolderUUID")

						'Jeden Ortsbezug kopieren
						For xl = 0 To MyASF_RLOrtsbezug.Resultset.TotalCount  - 1
							Set XSourceOrtsbezug = Application.System.GetDocumentDirect(MyASF_RLOrtsbezug.Resultset.Document(xl).DocumentID)
							Set XNewOrtsbezug = Application.System.CreateDocument(SWAFRAMELib.enumDocumentType.ItaDocument)
							XNewOrtsbezug.Copy XSourceOrtsbezug,True  ,True ,True
							XNewOrtsbezug.DocumentTypeGUID = XSourceOrtsbezug.DocumentTypeGUID
							XNewOrtsbezug.IndexOnly = True

							'UUID des neuen Dokuments auf die kopierten Ortsbezügen speichern
							If Not XNewOrtsbezug.Descriptors.ItemByGUID(deskDef.GUID) Is Nothing Then
								XNewOrtsbezug.Descriptors.ItemByGUID(deskDef.GUID).RemoveValues
								XNewOrtsbezug.Descriptors.ItemByGUID(deskDef.GUID).AddValue nextDoc.InternalDescriptors.ItemByGUID("UUID").Value(0)
							End If
							XNewOrtsbezug.Commit

							'DocID des Ortsbezugs am Dokument speichern
							Call ASF_Ortsbezug_SaveOrtsbezugInDoc(XNewOrtsbezug, nextDoc)
						Next xl
						'/für Ortsbezug, Eingefügt: GBA 2015-10-13

						'Ü014 - 04.10.2015 - GBA
						'Prüfen, ob ein Vorgang zu starten ist
						If assignedPD <> "" Then
							Set myPI = ASF_StartVorgangDokumentlebenszyklus(assignedPD, nextDoc, Application.System.User.User, strErrMsg)
							If myPI Is Nothing Then
								''Application.ShowError "Beim Starten des Vorgangs '" + SbVorgang.Data + "' ist ein Fehler aufgetreten!","Archive Dialog/Standard Dlg_OnExecuted",,,strErrMsg
								wfErr= wfErr + 1
							Else
								Application.OpenWFWorkItem  myPI.WorkItems(0)
								wfAnz= wfAnz + 1
							End If
						End If
						'/Ü014 - 04.10.2015 - GBA

						Set lastDoc = nextDoc
					Else
						'Dokument wieder 'aufheben'
						MergeFile2Buffer(nextDoc.Representations(0).PartDocuments(0).DataObject)
						anzFail= anzFail +1
					End If

					anzIter= anzIter +1

					Set nextiDoc= Nothing
					Set nextDoc= Nothing
				Loop

				If anzIter > 0 Then						'Ü014 - 04.10.2015 - GBA

					If wfAnz + wfErr = 0 Then
						msgText= (anzIter - anzFail + 1) & " von " & (anzIter + 1) & " Dokumenten erfolgreich gespeichert!"
					Else
						msgText= (anzIter - anzFail + 1) & " von " & (anzIter + 1) & " Dokumenten erfolgreich gespeichert!" & vbCrLf & vbCrLf & _
							     (wfAnz + 1) & " von " & (wfAnz+wfErr+1) & " Vorgänge erfolgreich angelegt: " & assignedPD
					End If

					MsgBox msgText, vbInformation, "Massenablage"

						If wfErr > 0 Then
						MsgBox wfErr & " Vorgänge konnten NICHT angelegt werden: " & assignedPD & _
								vbCrLf & vbCrLf & strErrMsg, vbExclamation, "WF-Start..."
					End If										'/Ü014 - 04.10.2015 - GBA

					Set idct= myArchDlg.ControlByName("TabEinordnung_ASFDokID")
					If Not idct Is Nothing Then
						idct.Data= ASF_IDs_getNextDocId()  'ID muss mit nächster Laufnummer vorbelegt werden
					End If
				End If
			End If
		End If
	End If
finish:
	cct.Checked = False
	Exit Sub
fError:
	Application.ShowError "Folgender Fehler ist aufgetreten!","Filing Environment/ Dokument FilingEnvironmentWindow_OnDocumentExecuted",,,Err.Description
	GoTo finish
End Sub



'************************************************************************
'*	LOKALE BUSINESS LOGIK
'************************************************************************

Rem See DialogFunc help topic for more information.
Private Function multiImport(DlgItem$, Action%, SuppValue?) As Boolean
	Select Case Action%
	Case 1 ' Dialog box initialization
	Case 2 ' Value changing or button pressed
		Rem multiImport = True ' Prevent button press from closing the dialog box
	Case 3 ' TextBox or ComboBox text changed
	Case 4 ' Focus changed
	Case 5 ' Idle
		Rem Wait .1 : multiImport = True ' Continue getting idle actions
	Case 6 ' Function key
	End Select
End Function

Private Sub DoFileInsert(ByVal File As SWADATALib.DocData, ByRef Handled As Boolean) ', ByVal onDrop As Boolean)

	Dim bct As SWACTRLSLib.Button
	Dim cct As SWACTRLSLib.CheckBox
	Set bct= Nothing

	If Not myArchDlg Is Nothing Then
		Set bct= myArchDlg.ControlByName("btnTakeNext")
	End If

	fileCount= fileCount + 1
	'If Not bct Is Nothing And Application.System.User.User = "SERbachmayrg" Then 'And Not bufferFiles Then
	If 1 = 1 Then

		'If (fileCount = 1 And fileSavePos >= 0) Or _

		'If onDrop Then
		'	onDrop= onDrop And (myDoc.Representations.Count > 0)
			'if not ondrop then ondrop = mydoc.Representations(mydoc.Representations.DefaultRepresentation).PartDocuments.Count
		'End If

		If (fileCount = 2 And fileSavePos < 0) Then

			Dim ret As Variant

			Begin Dialog UserDialog 430,140,"Importieren mehrerer Dateien",.multiImport ' %GRID:10,7,1,1
				Text 20,14,220,35,"Sie importieren mehrere Dateien. Wie möchten Sie vorgehen?",.Text1
				PushButton 20,56,390,28,"Alle Dateien in 1 winCube Dokument zusammenfassen",.btnTogether
				PushButton 20,98,390,28,"Jede Datei als separates winCube Dokument archivieren",.btnSeperate
				CancelButton 290,14,120,28
			End Dialog
			Dim dlg As UserDialog
			ret= Dialog(dlg)


			'retX= MsgBox("Sie importieren mehrere Dateien." & vbCrLf & vbCrLf & _
			'			"Wollen Sie alle Dateien zusammen als 1 Dokument archivieren (= JA), " & vbCrLf & _
			'			"oder jede Datei als separates Dokument archivieren? (= NEIN)", vbYesNo)

			'bufferFiles= (retX = vbNo)
			bufferFiles= (ret = 2)

			If bufferFiles And Not myArchDlg Is Nothing Then
				Set cct= myArchDlg.ControlByName("cbKeepValues")
				If Not cct Is Nothing Then cct.Checked= True
			End If
			' vbYes -> 6&
			' vbNo -> 7&
		End If
	End If


'*************************************************


	Call MergeFile2Buffer(File)
	If bufferFiles Then
		Handled= True
	End If
End Sub

Private Sub DoFileInserted()
	Dim defRep As Representation
	Dim firstPart As PartDocument

	Set myDoc = myArchDlg.Document
	If myDoc.Representations.Count = 0 Then Exit Sub

	Set defRep= myDoc.Representations(myDoc.Representations.DefaultRepresentation)
	If defRep.PartDocuments.Count = 0 Then Exit Sub

	Set firstPart= defRep.PartDocuments(0)
	'Ü010
	Call ASF_fill_file_control(firstPart.DataObject, myArchDlg, firstPart.DataObject.Alias, "DoFileInsert")
	'/Ü010
End Sub

Private Function isKnownDoc() As Boolean
	isKnownDoc= False

	Dim myPart As PartDocument
	Dim myData As DocData

	If myDoc.Representations.Count = 0 Then
		isKnownDoc= myKnownRepZero
		myKnownRepZero= True
		Exit Function
	End If

	If myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments.Count = 0 Then
		isKnownDoc= myKnownPartCount
		myKnownPartCount= True
		Exit Function
	End If


	isKnownDoc= False
	Set myPart= myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments(0)
	Set myData= myPart.DataObject
	If	myKnownDocID		= myDoc.DocumentID 		And _
		myKnownPartCount	= myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments.Count And _
		myKnownPartAlias	= myData.Alias 			And _
		myKnownPartName		= myData.fileName		Then

		isKnownDoc= True
		Exit Function
	End If

	myKnownDocID		= myDoc.DocumentID
	myKnownPartCount	= myDoc.Representations(myDoc.Representations.DefaultRepresentation).PartDocuments.Count
	myKnownPartAlias	= myData.Alias
	myKnownPartName		= myData.fileName

End Function

Private Sub InitFileInsert(ByRef Handled As Boolean)
	'Wird aufgerufen, sobald der Button Import gedrückt wird
	'Initialisierungen, damit man im open weis, dass ein neues Paket an Files beginnt
	fileCount= 0

	'If Not FilingEnvironmentWindow.ArchiveViewWindow.ArchiveDlg.Document Is Nothing Then
	If fileSavePos >= 0 Then
		'MsgBox "Es sind noch importierte Dateien vorhanden"
		Dim ret As Variant
		Begin Dialog UserDialog 500,140,"Dateien zwischengespeichert",.multiImport ' %GRID:10,7,1,1
			Text 20,14,330,35,"Es sind noch (alte) Dateien zwischengespeichert. Wie möchten Sie vorgehen?",.Text1
			PushButton 20,56,460,28,"Neue Dateien zum aktuellen winCube Dokument hinzufügen",.btnCurDok
			PushButton 20,98,460,28,"Neue Dateien nach den alten Dateien zwischenspeichern",.btnAppend
			CancelButton 360,14,120,28
		End Dialog
		Dim dlg As UserDialog
		ret= Dialog(dlg)
		If ret= 0 Then
			Handled= True
			Exit Sub
		End If
		bufferFiles= (ret = 2)
	Else
		bufferFiles = False
	End If
End Sub

Private Sub MergeFile2Buffer(ByVal File As SWADATALib.DocData)
	Dim upbBuf As Integer

	If bufferFiles Then
		upbBuf = INIT_UPB_BUFFER

		On Error GoTo AFTER_UPBND_CHECK
			upbBuf= UBound(fileBuffer)
AFTER_UPBND_CHECK:

		On Error GoTo OnFileOpen_Err:
		fileSavePos = fileSavePos + 1
		If fileSavePos > upbBuf Then
			upbBuf= fileSavePos
			ReDim Preserve fileBuffer(upbBuf)
		End If
		Set fileBuffer(fileSavePos) = File
		Call setArchDlgCtrls
		'Handled= True
	End If
	Exit Sub

OnFileOpen_Err:
	MsgBox "Das Zwischenspeichern der Import-Dokumente ist fehlgeschlagen: " & Err.Number & " / " & Err.Description, vbExclamation
	Err.Clear
End Sub


Private Sub setArchDlgCtrls
	Dim anzImHG As Integer
	Dim lct As SWACTRLSLib.Label
	Dim bct As SWACTRLSLib.Button

	If Not myArchDlg Is Nothing Then
		anzImHG= fileSavePos - fileGetPos +1
		Set lct= myArchDlg.ControlByName("MsgLabel")
		Set bct= myArchDlg.ControlByName("btnTakeNext")
		If anzImHG <= 0 Then
			If Not lct Is Nothing Then lct.Caption= ""
			If Not bct Is Nothing Then bct.Visible= False
			If Not bct Is Nothing Then bct.Enabled= False
			If Not bct Is Nothing Then bct.Height= 0			'weils mit visible nicht funktioniert
		ElseIf anzImHG = 1 Then
			If Not lct Is Nothing Then lct.Caption= anzImHG & " Datei zwischengespeichert"
			If Not bct Is Nothing Then bct.Enabled= False
			If Not bct Is Nothing Then bct.Visible= False
			If Not bct Is Nothing Then bct.Height= 16			'weils mit visible nicht funktioniert
		Else
			If Not lct Is Nothing Then lct.Caption= anzImHG & " Dateien zwischengespeichert"
			If Not bct Is Nothing Then bct.Enabled= False
			If Not bct Is Nothing Then bct.Visible= False
			If Not bct Is Nothing Then bct.Height= 16			'weils mit visible nicht funktioniert
		End If
		Set lct= Nothing
		Set bct= Nothing
	End If
End Sub

Private Sub AddRepFromBuffer(ByRef destDoc As ItaDocument)
	Dim newRep As Representation
	Dim newPart As PartDocument
	Dim firstPart As PartDocument

	'Set myDoc = myArchDlg.Document

	'Stop

	If fileSavePos > 0 And fileGetPos > fileSavePos Then
		MsgBox "Fehler:  fileGetPos > fileSavePos   GBA verständigen"
		Exit Sub
	End If

	'If myDoc.Representations.Count = 0 And fileSavePos >= 0 Then
	If fileSavePos >= 0 Then
		'MsgBox "Hier neues Dokument aus Buffer einfügen. - Werte beibehalten der Deskriptoren noch einstellen"
		'Stop

		'Idee: Hier in diesem Skript, oben onOpen im if: alle deskriptoren des dialogs auf werte beibehalten stellen
		' aber zusätzlich sollte ein häkchen auch am Dialog sein, ob man das tatsächlich will.
		' dieses häkchen könnte aber oben im onOpen im if defaultmäßig gesetzt werden (auch visuell)

		If destDoc.Representations.Count = 0 Then
			Set newRep= destDoc.Representations.AddNew()
		Else
			Set newRep= destDoc.Representations(destDoc.Representations.DefaultRepresentation)
		End If
		Set newPart= newRep.PartDocuments.AddNew()

		Set newPart.DataObject= fileBuffer(fileGetPos)
		fileGetPos= fileGetPos + 1

		Set firstPart= newRep.PartDocuments(0)
		'Ü010
		Call ASF_fill_file_control(firstPart.DataObject, myArchDlg, firstPart.DataObject.Alias, "AddRepFromBuffer")
		'/Ü010

		If fileGetPos > fileSavePos Then
			fileSavePos= -1
			fileGetPos = 0

			'MsgBox "Letztes File aus dem Zwischenspeicher erreicht."
		End If
		Call setArchDlgCtrls()
	End If
End Sub
'Ü009
Private Sub myFolderTreeView_OnSelChange()

	Dim myAktuellesRegister As FolderManager.CNode
	Dim categoryID As String
	Dim parKatName As String
	Dim myCatControl As CategoryTreeControl
	Dim myCatMVControl As CategoryTreeControl

	'On Error GoTo fError

	If FilingEnvironmentWindow.QueryResultWindow.ResultWindow.ResultList.SelectedCount = 0 Then
		Exit Sub
	End If

	Set MyASF_aktuelle_Akte = FilingEnvironmentWindow.QueryResultWindow.ResultWindow.ResultList.SelectedDocument(0)

	If Not MyASF_aktuelle_Akte Is Nothing Then
		Set myAktuellesRegister = myFolderTreeView.SelectedNode
		Select Case Application.System.FolderTypes.ItemByGUID(MyASF_aktuelle_Akte.FolderTypeGUID).Name
			Case "Beschaffungsakte"
				myArchDlg.ControlByName("TabEinordnung_SbASFStartkategorie").Data = "ASF Beschaffung"

				'TabEinordnung_SbASFStartkategorie_OnSelectionChanged
				Call loadASFStartCategories (myArchDlg.ControlByName("TabEinordnung_ASFKategorie"), _
											myArchDlg.ControlByName("TabEinordnung_CtcASFKategorie"), _
											myArchDlg.ControlByName("TabEinordnung_SbASFStartkategorie"), _
											myArchDlg.ControlByName("TabEinordnung_SbASFDokArt"), _
											myArchDlg.ControlByName("MvASFZugriff"))

				If Not myAktuellesRegister Is Nothing Then
					If SER_getFirstDescriptorValueByName(MyASF_aktuelle_Akte.Descriptors, "ASF_Verfahrensart", True) <> "" Then
						myArchDlg.ControlByName("TabEinordnung_CtcASFKategorie").ResetContent
						parKatName= ""
						If myAktuellesRegister.Parent Is Nothing Then
							parKatName= ""
						Else
							parKatName= myAktuellesRegister.Parent.Name
						End If

						'DMS-423 SWA
						Dim Registerlevel As Integer

						'SWA ermittelt, auf welcher Ebene sich das Register befindet
						Registerlevel = getLevelOfRegister(myAktuellesRegister)

						'DMS-423, SWA oberhalb der Ebene 2 wird die Kategorievorbelegung nicht ermittelt
						If Registerlevel < 2 Then
							categoryID = ASF_getCategoryIdByParentCategoryShortNameAndCategoryShortName(parKatName, myAktuellesRegister.Name)
						End If
						'/DMS-423 SWA

						If categoryID <> "" Then
							myArchDlg.ControlByName("TabEinordnung_CtcASFKategorie").AddData categoryID
							If myArchDlg.ControlByName("TabEinordnung_CtcASFKategorie").DataCount > 0 Then
								myArchDlg.ControlByName("TabEinordnung_ASFKategorie").Data = ASF_getCategoryNameByCategoryId(myArchDlg.ControlByName("TabEinordnung_CtcASFKategorie").Data(0))
								ASF_loadDokumentartenToSelectionBox(myArchDlg.ControlByName("TabEinordnung_CtcASFKategorie").StartId, 	myArchDlg.ControlByName("TabEinordnung_SbASFDokArt"), myArchDlg.ControlByName("TabEinordnung_CtcASFKategorie").Data(0), True)
								myArchDlg.ControlByName("MvASFZugriff").ResetContent
							End If
						End If
					End If
				End If
			Case "Bauprojektakte"
				FilingEnvironmentWindow.ActiveArchiveDocClass = Application.System.DocumentTypes.ItemByName("BauBestandsDok").GUID

				If Not myArchDlg.ControlByName("TabBasisinfo_CtcASFKategorie") Is Nothing Then


					Set myCatControl = myArchDlg.ControlByName("TabBasisinfo_CtcASFKategorie")
					Set myCatMVControl = myArchDlg.ControlByName("TabBasisinfo_CtcASFMVKategorie")
					If Not myAktuellesRegister.Parent Is Nothing Then
						If myAktuellesRegister.Parent.Name = "3. Umwelt und Verfahren" Then
								myCatControl.ResetContent
								myCatControl.AddData(ASF_getCategoryIdByParentCategoryNameAndCategoryName(myAktuellesRegister.Parent.Name,"Rechtsmaterie"))
								myArchDlg.ControlByName("TabBasisinfo_ASFKategorie").Data = ASF_getCategoryNameByCategoryId(myCatControl.Data(0))
								'* Mehrfachkategorie
								myCatMVControl.ConnectionString = ASF_DMS_Daten.ConnectionString
								myCatMVControl.StartId = "{30D353DE-E0B1-44DB-9132-68D44712182D}"
								myCatMVControl.RetrieveData
								myCatMVControl.ResetContent
								myCatMVControl.AddData(ASF_getCategoryIdByParentCategoryNameAndCategoryName("Rechtsmaterie(n)",myAktuellesRegister.Name))
								myCatMVControl.KeepValues = True
						Else
							If Not myAktuellesRegister.Parent Is Nothing Then
								myCatControl.ResetContent
								If Not ASF_getCategoryIdByParentCategoryNameAndCategoryName(myAktuellesRegister.Parent.Name,myAktuellesRegister.Name) = "" Then
									myCatControl.AddData(ASF_getCategoryIdByParentCategoryNameAndCategoryName(myAktuellesRegister.Parent.Name,myAktuellesRegister.Name))
									myArchDlg.ControlByName("TabBasisinfo_ASFKategorie").Data = ASF_getCategoryNameByCategoryId(myCatControl.Data(0))
								End If

							End If

						End If

					ASF_loadDokumentartenToSelectionBox(myArchDlg.ControlByName("TabBasisinfo_CtcASFKategorie").StartId, 	myArchDlg.ControlByName("TabBasisinfo_SbASFDokArt"), myArchDlg.ControlByName("TabBasisinfo_CtcASFKategorie").Data(0), True)

					End If

				End If


			Case Else
				FilingEnvironmentWindow.ActiveArchiveDocClass = Application.System.DocumentTypes.ItemByName("Standard").GUID

				If Not myArchDlg.ControlByName("TabEinordnung_SbASFStartkategorie") Is Nothing Then
					myArchDlg.ControlByName("TabEinordnung_SbASFStartkategorie").SelectedItem = -1
				End If
		End Select
	End If

If Not myFolderTreeView Is Nothing Then
	If Not  myFolderTreeView.SelectedNode Is Nothing Then
		myNavigationWindow.Caption = "2. Register auswählen"
		myRegLblLblNode.Caption = myFolderTreeView.SelectedNode.Name
		myFolderClassLbl.Caption = "Gewählte Aktenklasse: " + Application.System.FolderTypes.ItemByGUID(FilingEnvironmentWindow.ActiveArchiveFolderClass).Name
	End If
End If

	If Not UCase(myRegLblLblNode.Caption) = "KEINES" Then
		myBackBtn.Enabled = True
	End If

finish:
	Exit Sub
fError:
	Application.ShowError "Beim Übernehmen der Kategorie von der Akte auf das Dokument ist ein Fehler aufgetreten!","Filing Environment/Dokument in Arbeit Fkt. myFolderTreeView_OnSelChange",,,Err.Description
	GoTo finish
End Sub

'Ü015
'Private Sub myQueryResultWindow_OnLoadFolder(ByRef Handled As Boolean)
Private Sub myResultWindow_OnLoadFolder(ByRef Handled As Boolean)
'/Ü015
	Dim  MyASF_FEWOrtsbezug 		As FilingEnvironmentWindow
	Dim MyASF_RLOrtsbezug 		As SWARESULLib.ResultList
	Dim MyASF_RLOrtsbezugLE 	As SWARESULLib.ResultListLanguageExtension
	Dim totalCount As Integer
	Dim i As Integer
	Dim myPoststück As ItaDocument
	Dim geschaeftsPartner As String

	On Error GoTo fError
	'Ü015
	'If myQueryResultWindow.ResultList.SelectedCount > 0 Then
	If myResultWindow.ResultList.SelectedCount > 0 Then
	'/Ü015
		'Set MyASF_aktuelle_Akte = myQueryResultWindow.ResultList.SelectedDocument(0)
		Set MyASF_aktuelle_Akte = myResultWindow.ResultList.SelectedDocument(0)
	End If
	'/Ü015
	'Werte von aktueller Akte laden
	If Not MyASF_aktuelle_Akte Is Nothing Then

		ReDim Preserve XDescS(2) As String
		XDescS(0) = "ASF_Geschaeftszahl"
		XDescS(1) = "ASF_Projekt_Nummer"
		XDescS(2) = "ASF_Projekt_Bezeichnung"

		If Not 	myArchDlg.ControlByName("TabOrtsbezug_MvASFOrtOrtsbezugDokId") Is Nothing Then
				myArchDlg.ControlByName("TabOrtsbezug_MvASFOrtOrtsbezugDokId").ResetContent
		End If
'Ü012
		If Application.Globals.Exists  ("Poststueck") Then
			ReDim Preserve XDescS(3)
			XDescS(3) = "ASF_GP_GPName"
		End If
'/Ü012
		SER_syncFW_loadValuesFromIDocumentToArchiveDlgControls(MyASF_aktuelle_Akte, myArchDlg, XDescS)
'Ü012
		If Application.Globals.Exists  ("Poststueck") Then
			Set myPoststück = Application.Globals.Item ("Poststueck")
			If Not myPoststück Is Nothing Then
				geschaeftsPartner = SER_getFirstDescriptorValueByName(myPoststück.Descriptors, "ASF_GP_GPName", True)
				If geschaeftsPartner <> "" Then
					'Prüfung, ob der Geschäftsparnter im Feld nicht bereits enthalten ist
					On Error Resume Next
					myArchDlg.ControlByName("TabBeschlagwortung_MvASFGeschaeftspartner").AddData geschaeftsPartner
					Err.Clear
					On Error GoTo fError
				End If
			End If
		End If
'/Ü012
		ASF_Ortsbezug_copyOrtsbezuege(MyASF_aktuelle_Akte, myArchDlg, True)

		Set ASF_aktuelle_Akte = MyASF_aktuelle_Akte
		If Not myArchDlg.ControlByName("TabOrtsbezug_CCResultList") Is Nothing Then
			Set MyASF_RLOrtsbezug = myArchDlg.ControlByName("TabOrtsbezug_CCResultList").Control
			totalCount = MyASF_RLOrtsbezug.Resultset.TotalCount - 1
			If totalCount > 0 Then
				For i = totalCount To 0 Step -1
					MyASF_RLOrtsbezug.Resultset.RemoveDocument  MyASF_RLOrtsbezug.Resultset.Document(i)
				Next
			End If
		End If
		ASF_Ortsbezug_initDialogAndObjects( MyASF_RLOrtsbezug, _
										MyASF_RLOrtsbezugLE, _
										myArchDlg.ControlByName("TabOrtsbezug_CCResultList"), _
										"Ortsbezug", "IndexOnly", "20100101", _
										myArchDlg.ControlByName("TabOrtsbezug_MvASFOrtOrtsbezugDokId"))
	End If
Exit Sub
fError:
	Application.ShowError "Beim Laden der Akte ist ein Fehler aufgetreten!", Err.Source,,,Err.Description
End Sub
Private Sub loadASFStartCategories(pASFKategorie As IEdit, _
									pCtcASFKategorie As ICategoryTreeControl , _
									pSbASFStartkategorie As ISelectionBox, _
									pSbASFDokArt As ISelectionBox,  _
									pMvASFZugriff As IMultivalueEdit  )
	Dim xID As String

'*	Business Logic
	xID = ASF_getCategoryStartIdByCategoryName(pSbASFStartkategorie.Data)
	With pCtcASFKategorie
		.ResetContent
		.StartId = xID
		.RetrieveData
	End With
	pASFKategorie.Clear
	pSbASFDokArt.RemoveAll
	pMvASFZugriff.ResetContent
End Sub

'/Ü009


Private Sub myQueryResultWindow_OnShowRibbonElement(ByVal ElementID As Long, ByRef Show As Boolean)
Select Case ElementID
	Case 25276
		Show = False
	Case 26808
		Show = False
	Case 26806
		Show = False
	Case 26804
		Show = False
	End Select
End Sub

